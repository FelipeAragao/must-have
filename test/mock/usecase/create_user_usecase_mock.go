// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	create_user "github.com/FelipeAragao/must-have/internal/usecase/user/create_user"
	mock "github.com/stretchr/testify/mock"
)

// CreateUserUseCaseInterface is an autogenerated mock type for the CreateUserUseCaseInterface type
type CreateUserUseCaseInterface struct {
	mock.Mock
}

// Execute provides a mock function with given fields: input
func (_m *CreateUserUseCaseInterface) Execute(input *create_user.UserInputDTO) (*create_user.UserOutputDTO, error) {
	ret := _m.Called(input)

	var r0 *create_user.UserOutputDTO
	if rf, ok := ret.Get(0).(func(*create_user.UserInputDTO) *create_user.UserOutputDTO); ok {
		r0 = rf(input)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*create_user.UserOutputDTO)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*create_user.UserInputDTO) error); ok {
		r1 = rf(input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewCreateUserUseCaseInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewCreateUserUseCaseInterface creates a new instance of CreateUserUseCaseInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewCreateUserUseCaseInterface(t mockConstructorTestingTNewCreateUserUseCaseInterface) *CreateUserUseCaseInterface {
	mock := &CreateUserUseCaseInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
