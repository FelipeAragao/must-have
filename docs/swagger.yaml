definitions:
  change_password.UserInputDTO:
    properties:
      id:
        type: string
      password:
        type: string
      passwordNew:
        type: string
    type: object
  create_deal.DealInputDTO:
    properties:
      description:
        type: string
      location:
        properties:
          address:
            type: string
          city:
            type: string
          lat:
            type: number
          lng:
            type: number
          state:
            type: string
          zip_code:
            type: integer
        type: object
      photos:
        items:
          type: string
        type: array
      trade_for:
        type: string
      type:
        type: integer
      urgency:
        properties:
          limit_date:
            type: string
          type:
            type: integer
        type: object
      user_id:
        type: string
      value:
        type: number
    type: object
  create_user.UserInputDTO:
    properties:
      email:
        type: string
      location:
        properties:
          address:
            type: string
          city:
            type: string
          lat:
            type: number
          lng:
            type: number
          state:
            type: string
          zip_code:
            type: integer
        type: object
      login:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  entity.Deal:
    properties:
      created_at:
        type: string
      description:
        maxLength: 1000
        minLength: 3
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/entity.LocationDeal'
      photos:
        items:
          type: string
        type: array
      trade_for:
        type: string
      type:
        type: integer
      updated_at:
        type: string
      urgency:
        $ref: '#/definitions/entity.Urgency'
      user_id:
        type: string
      value:
        minimum: 0
        type: number
    required:
    - description
    - location
    - type
    - urgency
    - user_id
    - value
    type: object
  entity.LocationDeal:
    properties:
      address:
        maxLength: 100
        minLength: 3
        type: string
      city:
        maxLength: 100
        minLength: 3
        type: string
      lat:
        type: number
      lng:
        type: number
      state:
        maxLength: 2
        minLength: 2
        type: string
      zip_code:
        maximum: 99999999
        minimum: 10000000
        type: integer
    required:
    - address
    - city
    - lat
    - lng
    - state
    - zip_code
    type: object
  entity.LocationUser:
    properties:
      address:
        maxLength: 100
        minLength: 3
        type: string
      city:
        maxLength: 100
        minLength: 3
        type: string
      lat:
        type: number
      lng:
        type: number
      state:
        maxLength: 2
        minLength: 2
        type: string
      zip_code:
        maximum: 99999999
        minimum: 10000000
        type: integer
    required:
    - address
    - city
    - lat
    - lng
    - state
    - zip_code
    type: object
  entity.Urgency:
    properties:
      limit_date:
        type: string
      type:
        type: integer
    required:
    - type
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      location:
        $ref: '#/definitions/entity.LocationUser'
      login:
        maxLength: 50
        minLength: 3
        type: string
      name:
        maxLength: 100
        minLength: 3
        type: string
      updated_at:
        type: string
    required:
    - email
    - location
    - login
    - name
    type: object
  handlers.Error:
    properties:
      message:
        type: string
    type: object
  update_deal.DealInputDTO:
    properties:
      description:
        type: string
      id:
        type: string
      location:
        properties:
          address:
            type: string
          city:
            type: string
          lat:
            type: number
          lng:
            type: number
          state:
            type: string
          zip_code:
            type: integer
        type: object
      photos:
        items:
          type: string
        type: array
      trade_for:
        type: string
      type:
        type: integer
      urgency:
        properties:
          limit_date:
            type: string
          type:
            type: integer
        type: object
      user_id:
        type: string
      value:
        type: number
    type: object
info:
  contact:
    email: felpe.thiago10@gmail.com
    name: Felipe Arag√£o
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /deals:
    post:
      consumes:
      - application/json
      description: Create deal
      parameters:
      - description: deal request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create_deal.DealInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Create deal
      tags:
      - deals
  /deals/{id}:
    get:
      consumes:
      - application/json
      description: Get a deal
      parameters:
      - description: deal ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.Deal'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Get a deal
      tags:
      - deals
    put:
      consumes:
      - application/json
      description: Update a deal
      parameters:
      - description: deal ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: deal request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/update_deal.DealInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Update a deal
      tags:
      - deals
  /users:
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create_user.UserInputDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      summary: Create user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      description: Get a user
      parameters:
      - description: user ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.User'
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: user ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/create_user.UserInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - users
  /users/{id}/change-password:
    put:
      consumes:
      - application/json
      description: Change password a user
      parameters:
      - description: user ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      - description: user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/change_password.UserInputDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Error'
      security:
      - ApiKeyAuth: []
      summary: Change password a user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
